#!/usr/bin/env node

/* eslint-disable camelcase */

require('dotenv').config();
require('isomorphic-fetch');
const Twit = require('twit');

const T = new Twit({
	consumer_key: process.env.TWITTER_CONSUMER_KEY,
	consumer_secret: process.env.TWITTER_CONSUMER_SECRET,
	access_token: process.env.TWITTER_ACCESS_TOKEN,
	access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET,
	timeout_ms: 60 * 1000, // optional HTTP request timeout to apply to all requests.
	strictSSL: true, // optional - requires SSL certificates to be valid.
});

T.get('friends/ids', {
	screen_name: 'nuncamind',
	count: 5000,
	include_user_entities: false,
}).then((result) => {
	const followingIds = result.data.ids;

	Promise.all(
		followingIds.map(async (user_id, index) =>
			T.post('friendships/update', {
				user_id,
				retweets: true,
			})
				.then(() => {
					// console.log('Done for', user_id);
				})
				.catch(() =>
					T.get('users/lookup', {
						user_id,
						include_entities: false,
					})
						.then((response) => {
							console.log('FAILED for', user_id);
							console.log(response.data);
						})
						.catch(() => {
							console.log('DOUBLE FAILED for', user_id, index);
						})
				)
		)
	).then(() => {
		console.log('done');
		process.exit(0);
	});
});
