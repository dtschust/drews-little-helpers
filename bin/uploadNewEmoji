#!/usr/bin/env node

require('isomorphic-fetch');
require('dotenv').config();
const path = require('path');
const fs = require('fs');

const { WebClient } = require('@slack/client');

const token = process.env.SLACK_API_TOKEN_DREW_AND_KRISTA || '';
const web = new WebClient(token);

const folderPath = path.resolve(process.argv[2]);

console.log(folderPath);

fs.readdir(folderPath, (err, files) => {
	// handling error
	if (err) {
		console.log(`Unable to scan directory: ${err}`);
		return;
	}
	// listing all files using forEach
	const promises = [];
	files.forEach(file => {
		// Do whatever you want to do with the file
		const [filename, extension] = file.split('.');
		if (!extension || !['png', 'gif'].includes(extension.toLocaleLowerCase())) {
			return;
		}

		promises.push(
			web
				.apiCall('emoji.add', {
					mode: 'data',
					name: filename,
					image: fs.readFileSync(path.resolve(folderPath, file)),
				})
				.then(response => {
					console.log(
						`successfully uploaded ${filename}, ${JSON.stringify(response)}`,
					);
				})
				.catch(error => {
					console.error(`oh no failure with ${filename}, ${error}`);
				}),
		);

		console.log(file);
	});
	Promise.all(promises).then(() => {
		process.exit(0);
	});
});
