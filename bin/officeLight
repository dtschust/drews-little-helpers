#!/usr/bin/env node
const fetch = require('node-fetch');

require('dotenv').config();

const endpoint = process.env.HUE_ENDPOINT;
const username = process.env.HUE_USERNAME;
const light = process.env.HUE_LIGHT;
const INCREMENT = 60;

function getCurrentLightStatus() {
	return fetch(`http://${endpoint}/api/${username}/lights/${light}`, {
		method: 'GET',
	})
		.then((resp) => resp.json())
		.then((resp) => {
			const { state } = resp;
			const { on, bri } = state;
			console.log(`on: ${on} bri: ${bri}`);
			return { on, bri, resp };
		})
		.catch((err) => {
			console.error(err);
			throw err;
		});
}

function updateLightState(payload) {
	return fetch(`http://${endpoint}/api/${username}/lights/${light}/state`, {
		method: 'PUT',
		headers: {
			'Content-Type': 'application/json',
		},
		body: JSON.stringify(payload),
	})
		.then((resp) => resp.json())
		.then(console.log)
		.catch((err) => {
			console.error(err);
			throw err;
		});
}

function changeBri(briInc) {
	return updateLightState({ bri_inc: briInc });
}

async function toggleLight(inputOn) {
	let on;
	if (typeof inputOn !== 'undefined') {
		on = inputOn;
	} else {
		const { on: currentOn } = await getCurrentLightStatus();
		on = !currentOn;
	}
	return updateLightState({ on });
}

async function brighten() {
	const { on, bri } = await getCurrentLightStatus();
	if (!on) {
		await toggleLight(true);
		return;
	}

	if (bri === 254) {
		await updateLightState({ alert: 'select' });
		return;
	}

	await changeBri(INCREMENT);
}

async function darken() {
	const { on, bri } = await getCurrentLightStatus();
	if (!on) {
		await toggleLight(true);
		return;
	}

	if (bri === 1) {
		await updateLightState({ alert: 'select' });
		return;
	}

	await changeBri(INCREMENT * -1);
}

module.exports = {
	changeBri,
	toggleLight,
	brighten,
	darken,
};
